using System.Collections.Generic;

namespace ZooKeeper.Net
{
    /// <summary>
    /// Manage watchers & handle events generated by the ClientCnxn object.
    ///
    /// We are implementing this as a nested class of ZooKeeper so that
    /// the public methods will not be exposed as part of the ZooKeeper client
    /// API.
    /// </summary>
    public abstract class WatchRegistration
    {
        private readonly IWatcher watcher;
        private readonly string clientPath;

        /// <summary>
        /// Initializes a new instance of the <see cref="WatchRegistration"/> class.
        /// </summary>
        /// <param name="watcher">The watcher.</param>
        /// <param name="clientPath">The client path.</param>
        protected WatchRegistration(IWatcher watcher, string clientPath)
        {
            this.watcher = watcher;
            this.clientPath = clientPath;
        }

        abstract protected IDictionary<string, HashSet<IWatcher>> GetWatches(int rc);

        /// <summary>
        /// Register the watcher with the set of watches on path.
        /// </summary>
        /// <param name="rc">the result code of the operation that attempted to add the watch on the path.</param>
        public void Register(int rc)
        {
            if (!ShouldAddWatch(rc)) return;

            var watches = GetWatches(rc);
            HashSet<IWatcher> watchers;
            watches.TryGetValue(clientPath, out watchers);
            if (watchers == null)
            {
                watchers = new HashSet<IWatcher>();
                watches[clientPath] = watchers;
            }
            watchers.Add(watcher);
        }

        /// <summary>
        /// Determine whether the watch should be added based on return code.
        /// </summary>
        /// <param name="rc">the result code of the operation that attempted to add the watch on the node</param>
        /// <returns>true if the watch should be added, otw false</returns>
        protected virtual bool ShouldAddWatch(int rc)
        {
            return rc == 0;
        }
    }
}